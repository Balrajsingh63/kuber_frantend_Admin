{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport instance from \"./axiosInterceptors\";\n\n// import AsyncStorageHelper from '../utils/Helpers/AsyncStorageHelper';\n\nexport const post = async (url, formData, type) => {\n  _s();\n  // let token = await AsyncStorageHelper.getData('token');\n  const userData = useSelector(state => state.authReducer.user);\n  const options = {\n    headers: {\n      Authorization: \"Bearer \".concat(userData === null || userData === void 0 ? void 0 : userData.token),\n      Accept: type == true ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return instance.post(url, formData, options).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    // console.log(\"post method api error========\", error);\n    return error;\n  });\n};\n_s(post, \"b1+cdUNjwz2gXT4ruClBbvvBoIw=\", false, function () {\n  return [useSelector];\n});\nexport const get = async function (url) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return instance.get(url, options).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    // console.log('Get method api error========', error);\n    return error;\n  });\n};\nexport const put = async (url, formData, type) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: type == true ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": type == true ? \"multipart/form-data\" : \"application/json\"\n    }\n  };\n  return instance.put(url, formData, options).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    // console.log('Put method api error========', error);\n    return error;\n  });\n};\nexport const deleteApi = async function (url) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return instance.delete(url, options).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    // console.log('Delete method api error========', error);\n    return error;\n  });\n};\nexport const ImageUpload = async (url, data) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  };\n  return instance.post(url, data, options).then(function (response) {\n    var _response$data;\n    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.success) == 0) {\n      // alert(response?.data?.message);\n    }\n    return response.data;\n  }).catch(function (error) {\n    // console.log('Image Upload method api error========', error);\n  });\n};\n_c = ImageUpload;\nexport const postImage = async (url, Data, type) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: type ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return instance.post(url, Data, options).then(function (response) {\n    var _response$data2;\n    if ((response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.success) == 0) {\n      // alert(response?.data?.message);\n    }\n    return response.data;\n  }).catch(function (error) {\n    return error;\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["useSelector","instance","post","url","formData","type","_s","userData","state","authReducer","user","options","headers","Authorization","concat","token","Accept","then","response","data","catch","error","get","arguments","length","undefined","put","deleteApi","delete","ImageUpload","_response$data","success","_c","postImage","Data","_response$data2","$RefreshReg$"],"sources":["/Users/vakeelsingh/Desktop/projects/argon-dashboard-react-master/src/services/services.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport instance from \"./axiosInterceptors\";\n\n// import AsyncStorageHelper from '../utils/Helpers/AsyncStorageHelper';\n\nexport const post = async (url, formData, type) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const userData = useSelector(state => state.authReducer.user);\n  const options = {\n    headers: {\n      Authorization: `Bearer ${userData?.token}`,\n      Accept: type == true ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return instance\n    .post(url, formData, options)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      // console.log(\"post method api error========\", error);\n      return error;\n    });\n};\n\nexport const get = async (url, type = 0) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return instance\n    .get(url, options)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      // console.log('Get method api error========', error);\n      return error;\n    });\n};\n\nexport const put = async (url, formData, type) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: type == true ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": type == true ? \"multipart/form-data\" : \"application/json\",\n    },\n  };\n  return instance\n    .put(url, formData, options)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      // console.log('Put method api error========', error);\n      return error;\n    });\n};\n\nexport const deleteApi = async (url, type = 0) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return instance\n    .delete(url, options)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      // console.log('Delete method api error========', error);\n      return error;\n    });\n};\n\nexport const ImageUpload = async (url, data) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  };\n  return instance\n    .post(url, data, options)\n    .then(function (response) {\n      if (response?.data?.success == 0) {\n        // alert(response?.data?.message);\n      }\n      return response.data;\n    })\n    .catch(function (error) {\n      // console.log('Image Upload method api error========', error);\n    });\n};\n\nexport const postImage = async (url, Data, type) => {\n  // let token = await AsyncStorageHelper.getData('token');\n  const options = {\n    headers: {\n      // Authorization: `Bearer ${token}`,\n      Accept: type ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return instance\n    .post(url, Data, options)\n    .then(function (response) {\n      if (response?.data?.success == 0) {\n        // alert(response?.data?.message);\n      }\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}